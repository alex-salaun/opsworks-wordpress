upstream unicorn_<%= @application[:domains].first %> {
 server unix:<%= @application[:deploy_to]%>/shared/sockets/unicorn.sock fail_timeout=0;
}

server {
  listen 80;
  server_name <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;

  <% if @application[:log_format] %>
    <% @application[:log_format].each do |log_format_name| %>
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>.access.<%= log_format_name %>.log <%= log_format_name %>;
    <% end %>
  <% else %>
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>.access.log;
  <%end %>

  keepalive_timeout 5;

  root <%= @application[:absolute_document_root] %>;

  if ($http_host !~* "<%= @application[:domains].first %>") {
    rewrite ^(.*)$ http://<%= @application[:domains].first %>$1 permanent;
  }

  rewrite ^/blog$ /blog/ permanent;
  rewrite ^/blog/wp-admin$ /blog/wp-admin/ permanent;

  if ($uri !~ "^/robots.txt") {
   set $rule_0 1$rule_0;
  }
  if ($uri !~ "^/blog") {
    set $rule_0 2$rule_0;
  }
  if ($uri !~ "/fonts/") {
    set $rule_0 3$rule_0;
  }
  if ($uri !~ "^/logos/") {
    set $rule_0 4$rule_0;
  }
  if ($uri !~ ".jpg|.svg|.png|.jpeg|.html|.css|.js|.xml|.pdf") {
    set $rule_0 5$rule_0;
  }
  if ($uri !~ "^/projects") {
    set $rule_0 6$rule_0;
  }
  if ($rule_0 = "654321") {
    rewrite ^(.*[^/])$ $1/ permanent;
  }

  client_max_body_size 11M;

  set_real_ip_from 10.0.0.0/8;
  real_ip_header   X-Forwarded-For;

  location / {
    try_files $uri/index.html $uri/index.htm @unicorn;
  }

  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

  <% if node[:nginx] && node[:nginx][:proxy_read_timeout] -%>
    proxy_read_timeout <%= node[:nginx][:proxy_read_timeout] %>;
  <% end -%>
  <% if node[:nginx] && node[:nginx][:proxy_send_timeout] -%>
    proxy_send_timeout <%= node[:nginx][:proxy_send_timeout] %>;
  <% end -%>

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @application[:domains].first %>;
      break;
    }
  }

  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  error_page 503 @maintenance;
  location @maintenance {
    rewrite  ^(.*)$  /maintenance.html last;
    break;
  }

  error_page 500 502 504 /500.html;
  location = /500.html {
    root <%= @application[:absolute_document_root] %>;
  }

  location /blog {
    proxy_redirect off;
    proxy_cache off;
    proxy_pass <%= node[:custom_nginx][:proxy_url] %>;
    proxy_set_header X-Origin-Server nginx-proxy-pass;
    proxy_pass_request_headers on;
  }
}

<% if @application[:ssl_support] %>
server {
  listen   443;
  server_name <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>-ssl.access.log;

  ssl on;
  ssl_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= @application[:domains].first %>.key;
  <% if @application[:ssl_certificate_ca] -%>
  ssl_client_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.ca;
  <% end -%>

  keepalive_timeout 5;

  root <%= @application[:absolute_document_root] %>;

  if ($http_host !~* "<%= @application[:domains].first %>") {
    rewrite ^(.*)$ http://<%= @application[:domains].first %>$1 permanent;
  }

  rewrite ^/blog$ /blog/ permanent;
  rewrite ^/blog/wp-admin$ /blog/wp-admin/ permanent;

  if ($uri !~ "^/robots.txt") {
   set $rule_0 1$rule_0;
  }
  if ($uri !~ "^/blog") {
    set $rule_0 2$rule_0;
  }
  if ($uri !~ "/fonts/") {
    set $rule_0 3$rule_0;
  }
  if ($uri !~ "^/logos/") {
    set $rule_0 4$rule_0;
  }
  if ($uri !~ ".jpg|.svg|.png|.jpeg|.html|.css|.js|.xml|.pdf") {
    set $rule_0 5$rule_0;
  }
  if ($uri !~ "^/projects") {
    set $rule_0 6$rule_0;
  }
  if ($rule_0 = "654321") {
    rewrite ^(.*[^/])$ $1/ permanent;
  }

  client_max_body_size 11M;

  set_real_ip_from 10.0.0.0/8;
  real_ip_header   X-Forwarded-For;

  location / {
    try_files $uri/index.html $uri/index.htm @unicorn;
  }

  location @unicorn {
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

  <% if node[:nginx] && node[:nginx][:proxy_read_timeout] -%>
    proxy_read_timeout <%= node[:nginx][:proxy_read_timeout] %>;
  <% end -%>
  <% if node[:nginx] && node[:nginx][:proxy_send_timeout] -%>
    proxy_send_timeout <%= node[:nginx][:proxy_send_timeout] %>;
  <% end -%>

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @application[:domains].first %>;
      break;
    }
  }

  error_page 503 @maintenance;
  location @maintenance {
    rewrite  ^(.*)$  /maintenance.html last;
    break;
  }

  error_page 500 502 504 /500.html;
  location = /500.html {
    root <%= @application[:absolute_document_root] %>;
  }

  location /blog {
    proxy_redirect off;
    proxy_cache off;
    proxy_pass <%= node[:custom_nginx][:proxy_url] %>;
    proxy_set_header X-Origin-Server nginx-proxy-pass;
    proxy_pass_request_headers on;
  }
}
<% end %>
